<?php
/**
 * @file
 * The Linkout module generates links for a feature
 */
require_once 'includes/tripal_linkout.inc';

function tripal_linkout_help($path, $arg) {
    switch ($path) {
    case "admin/help#tripal_linkout":
        return '<p>' . t("Generates external links") . '</p>';
        break;
    }
} 

function tripal_linkout_menu() {
    $items = array();
    // used by phylotree, where we don't have gene names but do have "family representative" names 
    // (e.g. splice isoform or translation thereof)
    // components of the URL are genus species transcript_name
    $items['phylotree_links/%/%/%/json'] = array(
        'page callback' => 'family_representative_linkout_json',
        'page arguments' => array(1, 2, 3),
        'type' => MENU_CALLBACK,
        'access callback' => TRUE // allow all anonymous http clients
    );
    //used by context viewer, which has only the gene name to linkout with at this time
    $items['gene_links/%/json'] = array(
        'page callback' => 'gene_linkout_json',
        'page arguments' => array(1),
        'type' => MENU_CALLBACK,
        'access callback' => TRUE // allow all anonymous http clients
    );
    //used by blast service, for hits to transcript/protein dbs
    $items['gene_links_for_transcript/%/json'] = array(
        'page callback' => 'gene_linkout_for_transcript_json',
        'page arguments' => array(1),
        'type' => MENU_CALLBACK,
        'access callback' => TRUE // allow all anonymous http clients
    );
    //used by context viewer, which has only the gene name to linkout with at this time
    $items['famreps_links'] = array(
        'page callback' => 'famreps_linkout_json',
        'type' => MENU_CALLBACK,
        'access callback' => TRUE // allow all anonymous http clients
    );

    return $items;

}
